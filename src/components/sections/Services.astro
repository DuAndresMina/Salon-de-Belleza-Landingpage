---
// src/components/sections/Services.astro
import ServiceCard from '../ServiceCard.astro';

interface Props {
  services: typeof import('../../config/services').services;
  whatsappNumber: string;
}

const { services, whatsappNumber } = Astro.props;
---

<section id="servicios" class="py-20 bg-white">
  <div class="container mx-auto px-4">
    <h2 class="text-5xl md:text-6xl font-display font-bold text-center text-gray-800 mb-16" data-aos="fade-up">
      Nuestros Servicios
    </h2>

    <!-- Filtros -->
    <div class="flex flex-wrap justify-center gap-4 mb-12" id="filters">
      <button
        class="filter-btn px-6 py-3 rounded-full bg-accent text-white font-semibold hover:bg-accent/90 transition-colors"
        data-category="all"
        aria-label="Mostrar todos los servicios"
      >
        Todos
      </button>
      {Object.keys(services).map((category) => (
        <button
          class="filter-btn px-6 py-3 rounded-full bg-gray-200 text-gray-700 font-semibold hover:bg-accent hover:text-white transition-colors"
          data-category={category}
          aria-label={`Filtrar servicios de ${category}`}
        >
          {{
            hair: 'Cabello',
            nails: 'Uñas',
            beauty: 'Belleza'
          }[category]}
        </button>
      ))}
    </div>

    <!-- Grid de servicios -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="services-grid">
      {Object.entries(services).map(([category, services]) => 
        services.map(service => (
          <ServiceCard {...service} {whatsappNumber} data-category={category} />
        ))
      )}
    </div>
  </div>

<style>
  .filter-btn {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    
    &.active {
      @apply bg-accent text-white scale-105;
      box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    }
  }
</style>

<script>
  // Filtrado de servicios
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const serviceCards = document.querySelectorAll('.service-card');

    // Función de filtrado
    const filterServices = (category) => {
      serviceCards.forEach((card) => {
        const cardCategory = card.dataset.category;
        const shouldShow = category === 'all' || cardCategory === category;

        card.style.display = shouldShow ? 'block' : 'none';
        card.classList.toggle('animate-fade-in', shouldShow);
      });
    };

    // Manejar clic en botones
    filterButtons.forEach((button) => {
      button.addEventListener('click', () => {
        // Remover clase activa de todos los botones
        filterButtons.forEach((btn) => {
          btn.classList.remove('active', 'bg-accent', 'text-white');
          btn.classList.add('bg-gray-200', 'text-gray-700');
        });

        // Añadir clase activa al botón clickeado
        button.classList.add('active', 'bg-accent', 'text-white');
        button.classList.remove('bg-gray-200', 'text-gray-700');

        // Obtener categoría y filtrar
        const category = button.dataset.category;
        filterServices(category);

        // Actualizar URL
        history.replaceState(null, null, `#${category}`);
      });
    });

    // Filtrado inicial desde URL
    const initialCategory = window.location.hash.replace('#', '') || 'all';
    const initialButton = Array.from(filterButtons).find(
      (btn) => btn.dataset.category === initialCategory
    );

    if (initialButton) {
      initialButton.click();
    }
  });
</script>
</section>